pipeline {
    agent any

    stages {
        // Etapa para detener los contenedores de docker
        stage{ 'Parando los servicios'
            steps {
                sh '''
                docker compose -p demo-d down || true
                '''
            }
        }

        // Etapas para eliminar las iamgenes viejas
        stage{ 'Eliminando imagenes anteriores'
            steps {
                sh '''
                IMAGES=$(docker images --filter "label=com.docker.compose.project=demo-d" -q)
                if [ -n "$IMAGES" ]; then
                    docker rmi -f $IMAGES
                else 
                    echo "No hay imagenes para eliminar"
                fi
                '''
            }
        }
        // Etapa para bajar la actualizacion del repo
        stage{ 'Bajando la actualizacion del repo'
            steps {
                checkout scm
            }
        }

        // Etapa para construir y desplegar
        stage('Costruyendo y desplegando') {
                steps {
                    sh '''
                        docker compose up --build -d
                    '''
                }
        }

        // Post actions
        post {
            success {
                echo 'Pipeline completado exitosamente.'
            }
            failure {
                echo 'Ocurrio un error durante la ejecucion del pipeline.'
            }
            always {
                echo 'Ejecucion del Pipeline finalizado.'
            }
        }
    }
}